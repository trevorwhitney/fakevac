package com.trevorwhitney.fakevac.api

import com.nhaarman.mockito_kotlin.doReturn
import io.damo.aspen.Test
import org.assertj.core.api.Assertions.assertThat

class StatusControllerTest : Test({
    val controller = StatusController()

    test("GET /status") {
        doReturn(buildNestThermostatResponse())
        val response = controller.getStatus()

        assertThat(response).isEqualTo(StatusJson(internalTemperature = 72))
    }
})

fun buildNestThermostatResponse(
    humidity: Int = 35,
    locale: String = "en-US",
    temperature_scale: String = "F",
    is_using_emergency_heat: Boolean = false,
    has_fan: Boolean = true,
    software_version: String = "5.6.2-3",
    has_leaf: Boolean = false,
    where_id: String = "living-room-id",
    device_id: String = "thermostat-id",
    name: String = "Living Room (Nest)",
    can_heat: Boolean = true,
    can_cool: Boolean = false,
    target_temperature_c: Double = 20.5,
    target_temperature_f: Int = 69,
    target_temperature_high_c: Int = 24,
    target_temperature_high_f: Int = 75,
    target_temperature_low_c: Int = 20,
    target_temperature_low_f: Int = 68,
    ambient_temperature_c: Double = 20.5,
    ambient_temperature_f: Int = 72,
    away_temperature_high_c: Int = 24,
    away_temperature_high_f: Int = 76,
    away_temperature_low_c: Double = 16.5,
    away_temperature_low_f: Int = 62,
    eco_temperature_high_c: Int = 24,
    eco_temperature_high_f: Int = 76,
    eco_temperature_low_c: Double = 16.5,
    eco_temperature_low_f: Int = 62,
    is_locked: Boolean = false,
    locked_temp_min_c: Int = 20,
    locked_temp_min_f: Int = 68,
    locked_temp_max_c: Int = 22,
    locked_temp_max_f: Int = 72,
    sunlight_correction_active: Boolean = false,
    sunlight_correction_enabled: Boolean = true,
    structure_id: String = "structure-1-id",
    fan_timer_active: Boolean = false,
    fan_timer_timeout: String = "1970-01-01T00:00:00.000Z",
    fan_timer_duration: Int = 15,
    previous_hvac_mode: String = "heat",
    hvac_mode: String = "eco",
    time_to_target: String = "~0",
    time_to_target_training: String = "ready",
    where_name: String = "Living Room",
    label: String = "Nest",
    name_long: String = "Living Room Thermostat (Nest)",
    is_online: Boolean = true,
    last_connection: String = "2017-06-15T13:30:58.420Z",
    hvac_state: String = "off"
): NestThermostat {
    return NestThermostat(
        humidity = humidity,
        locale = locale,
        temperature_scale = temperature_scale,
        is_using_emergency_heat = is_using_emergency_heat,
        has_fan = has_fan,
        software_version = software_version,
        has_leaf = has_leaf,
        where_id = where_id,
        device_id = device_id,
        name = name,
        can_heat = can_heat,
        can_cool = can_cool,
        target_temperature_c = target_temperature_c,
        target_temperature_f = target_temperature_f,
        target_temperature_high_c = target_temperature_high_c,
        target_temperature_high_f = target_temperature_high_f,
        target_temperature_low_c = target_temperature_low_c,
        target_temperature_low_f = target_temperature_low_f,
        ambient_temperature_c = ambient_temperature_c,
        ambient_temperature_f = ambient_temperature_f,
        away_temperature_high_c = away_temperature_high_c,
        away_temperature_high_f = away_temperature_high_f,
        away_temperature_low_c = away_temperature_low_c,
        away_temperature_low_f = away_temperature_low_f,
        eco_temperature_high_c = eco_temperature_high_c,
        eco_temperature_high_f = eco_temperature_high_f,
        eco_temperature_low_c = eco_temperature_low_c,
        eco_temperature_low_f = eco_temperature_low_f,
        is_locked = is_locked,
        locked_temp_min_c = locked_temp_min_c,
        locked_temp_min_f = locked_temp_min_f,
        locked_temp_max_c = locked_temp_max_c,
        locked_temp_max_f = locked_temp_max_f,
        sunlight_correction_active = sunlight_correction_active,
        sunlight_correction_enabled = sunlight_correction_enabled,
        structure_id = structure_id,
        fan_timer_active = fan_timer_active,
        fan_timer_timeout = fan_timer_timeout,
        fan_timer_duration = fan_timer_duration,
        previous_hvac_mode = previous_hvac_mode,
        hvac_mode = hvac_mode,
        time_to_target = time_to_target,
        time_to_target_training = time_to_target_training,
        where_name = where_name,
        label = label,
        name_long = name_long,
        is_online = is_online,
        last_connection = last_connection,
        hvac_state = hvac_state
    )
}

data class NestRootResponse(val devices: NestDevices)

data class NestDevices(val thermostats: Map<String, NestThermostat>)

data class NestThermostat(
    val humidity: Int,
    val locale: String,
    val temperature_scale: String,
    val is_using_emergency_heat: Boolean,
    val has_fan: Boolean,
    val software_version: String,
    val has_leaf: Boolean,
    val where_id: String,
    val device_id: String,
    val name: String,
    val can_heat: Boolean,
    val can_cool: Boolean,
    val target_temperature_c: Double,
    val target_temperature_f: Int,
    val target_temperature_high_c: Int,
    val target_temperature_high_f: Int,
    val target_temperature_low_c: Int,
    val target_temperature_low_f: Int,
    val ambient_temperature_c: Double,
    val ambient_temperature_f: Int,
    val away_temperature_high_c: Int,
    val away_temperature_high_f: Int,
    val away_temperature_low_c: Double,
    val away_temperature_low_f: Int,
    val eco_temperature_high_c: Int,
    val eco_temperature_high_f: Int,
    val eco_temperature_low_c: Double,
    val eco_temperature_low_f: Int,
    val is_locked: Boolean,
    val locked_temp_min_c: Int,
    val locked_temp_min_f: Int,
    val locked_temp_max_c: Int,
    val locked_temp_max_f: Int,
    val sunlight_correction_active: Boolean,
    val sunlight_correction_enabled: Boolean,
    val structure_id: String,
    val fan_timer_active: Boolean,
    val fan_timer_timeout: String,
    val fan_timer_duration: Int,
    val previous_hvac_mode: String,
    val hvac_mode: String,
    val time_to_target: String,
    val time_to_target_training: String,
    val where_name: String,
    val label: String,
    val name_long: String,
    val is_online: Boolean,
    val last_connection: String,
    val hvac_state: String
)
